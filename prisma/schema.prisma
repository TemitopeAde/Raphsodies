// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  name              String?
  password          String
  createdAt         DateTime @default(now())
  isVerified        Boolean  @default(false)
  verificationToken String?  @unique
  role              String?
  payments          Payment[]
}

model Product {
  id          String   @id @default(cuid())  
  name        String  
  description String?  
  price       Decimal  
  priceDollar Decimal?
  stock       Int  
  imageUrl    String?  
  label       String?  
  otherDetails Json?  
  categoryId  String  
  attributes  String[]
  category    Category @relation(fields: [categoryId], references: [id])  
  createdAt   DateTime @default(now())  
  updatedAt   DateTime @updatedAt
  active      Boolean?  

  payments    Payment[] @relation("PaymentProducts")
}

model Category {
  id        String    @id @default(cuid())  
  name      String    @unique  
  products  Product[] // One-to-many relationship with products
  createdAt DateTime  @default(now())  
  updatedAt DateTime  @updatedAt  
}

model Payment {
  id          String   @id @default(uuid())  
  userSnapshot Json?
  userId      Int      
  reference   String   @unique 
  amount      Int      
  currency    String   @default("NGN")  
  status      String   @default("completed")  
  paidAt      DateTime?  
  createdAt   DateTime @default(now())  
  updatedAt   DateTime @updatedAt  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  products    Product[] @relation("PaymentProducts")
  delivery    Json?
  totalItems  Int?

  couponId    String?
  coupon      Coupon?  @relation(fields: [couponId], references: [id])
  discountAmount Int?
}


model Blog {
  id          String    @id @default(cuid())  
  title       String    
  content     String    
  image       String
  slug        String    @unique 
  author      String    
  createdAt   DateTime  @default(now())  
  updatedAt   DateTime  @updatedAt  
}

model ContactUs {
  id          String    @id @default(cuid())  
  name        String    
  email       String     
  phone       String
  message     String    
  createdAt   DateTime  @default(now())  
  updatedAt   DateTime  @updatedAt  
}


model Coupon {
  id              String    @id @default(cuid())
  code            String    @unique
  discountType    String    // "percentage" or "fixed"
  discountValue   Int       // Percentage (1-100) or fixed amount in cents/lowest currency unit
  minOrderAmount  Int?      // Minimum order amount to apply coupon
  maxUses         Int?      // Maximum number of times coupon can be used
  currentUses     Int       @default(0)
  startDate       DateTime  @default(now())
  endDate         DateTime?
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  payments        Payment[]
}